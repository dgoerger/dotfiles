#!/bin/ksh

set -euo pipefail

readonly OS="$(uname)"

if [[ "${OS}" == 'Darwin' ]]; then
	readonly cpu="$(echo "$(sysctl -n hw.logicalcpu)"cpu: "$(sysctl -n machdep.cpu.brand_string)")"
	readonly disk_query="$(df -H /System/Volumes/Data 2>/dev/null | tail -n1 | awk '{print $2, $3, $5}')"
	readonly distro='macOS'
	readonly gpu="$(system_profiler SPDisplaysDataType | awk -F': ' '/^\ *Chipset Model:/ {print $2}' | awk '{ printf "%s / ", $0 }' | sed -e 's/\/ $//g')"
	readonly host="$(sysctl -n hw.model 2>/dev/null)"
	readonly kernel="$(uname -rm)"
	readonly memory_query="$(echo "$(echo "$(sysctl -n hw.memsize)" | bc) $(vm_stat | grep ' active' | awk '{ print $3*4*1024 }')")"

elif [[ "${OS}" == 'FreeBSD' ]]; then
	readonly cpu="$(echo "$(sysctl -n hw.ncpu)cpu: $(sysctl -n hw.model 2>/dev/null)")"
	readonly disk_query="$(/sbin/zpool list -Hpo size,allocated,capacity | awk '{printf("%.1fG %.1fG %d%%\n", $1/1024^3, $2/1024^3, $3)}' | head -n 1)"
	readonly distro='FreeBSD'
	readonly gpu="$(pciconf -lv | grep -B 4 -F "VGA" | grep -F "device" | awk -F"'" '{print $2}' | sed '/^$/d')"
	readonly host='unknown'
	readonly kernel="$(uname -mr)"
	readonly memory_query="$(echo "$(sysctl -n hw.pagesize) $(sysctl -n hw.usermem) $(vmstat -s | awk '/pages active$/ {print $1}')" | awk '{ print $2, $1 * $3 }')"

elif [[ "${OS}" == 'Linux' ]]; then
	readonly cpu="$(echo "$(lscpu | awk '/^CPU\(s\):/ {print $NF}')"cpu: "$(grep '^model name' /proc/cpuinfo | uniq | awk -F': ' '{print $NF}' | tr -s " ")")"
	readonly disk_query="$(/bin/df -lh -x aufs -x tmpfs -x overlay -x devtmpfs -x sysfs -x udf -x nfs -x cifs -x cgroup -x cgroup2 --total 2>/dev/null | awk '{print $2, $3, $5}' | tail -n1)"
	readonly distro="$(grep PRETTY_NAME /etc/os-release 2>/dev/null | awk -F'"' '{print $2}')"
	if [[ -z "${distro}" ]]; then
		readonly distro="$(uname -sm)"
	fi
	readonly gpu="$(lspci -mm | awk -F '\"|\" \"|\\(' '/"Display|"3D|"VGA/ {print $3, $4}' | awk -F'[' '{$1=""; print $0}' | sed 's/\]//g' | sed 's/^\ //g')"
	readonly host="$(echo "$(cat /sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null) $(cat /sys/devices/virtual/dmi/id/product_name 2>/dev/null)" | sed 's/^\ //g' | sed 's/\ $//g')"
	readonly kernel="$(echo "$(uname -m): $(uname -r | awk -F'-' '{print $1}')" | sed 's/x86_64/amd64/')"
	readonly memory_query="$(/usr/bin/free -b | grep -E "^Mem:" | awk '{ print $2,$3 }')"

elif [[ "${OS}" == 'NetBSD' ]]; then
	readonly cpu="$(echo "$(sysctl -n hw.ncpuonline)"cpu: "$(sysctl -n machdep.cpu_brand | tr -s " ")")"
	readonly disk_query="$(/bin/df -Pk 2>/dev/null | awk '/^\// {total+=$2; used+=$3}END{printf("%.1fG %.1fG %d%%\n", total/1048576, used/1048576, used*100/total)}')"
	readonly distro="$(uname -sr)"
	readonly host="$(echo "$(sysctl -n machdep.dmi.system-vendor 2>/dev/null) $(sysctl -n machdep.dmi.system-product 2>/dev/null)" | sed 's/^\ //g' | sed 's/\ $//g')"
	readonly kernel="$(echo "$(uname -m): $(sysctl -n kern.version | head -n1 | awk '{print $NF, $6, $7}')")"
	readonly memory_query="$(echo "$(sysctl -n hw.pagesize) $(sysctl -n hw.usermem64) $(vmstat -s | awk '/pages active$/ {print $1}')" | awk '{ print $2, $1 * $3 }')"

elif [[ "${OS}" == 'OpenBSD' ]]; then
	readonly cpu="$(echo "$(sysctl -n hw.ncpuonline)"cpu: "$(sysctl -n hw.model)")"
	readonly disk_query="$(/bin/df -Pk 2>/dev/null | awk '/^\// {total+=$2; used+=$3}END{printf("%.1fG %.1fG %d%%\n", total/1048576, used/1048576, used*100/total)}')"
	readonly distro="$(sysctl -n kern.version | head -n1 | awk '{print $1, $2}')"
	readonly gpu="$(/usr/X11R6/bin/glxinfo -B 2>/dev/null | awk '/OpenGL renderer string/ { sub(/OpenGL renderer string: /,""); print }')"
	readonly host="$(echo "$(sysctl -n hw.vendor 2>/dev/null) $(sysctl -n hw.product 2>/dev/null)" | sed 's/^\ //g' | sed 's/\ $//g')"
	readonly kernel="$(echo "$(uname -m): $(sysctl -n kern.version | head -n1 | awk '{print $NF, $6, $7}' | tr -d '()')")"
	readonly memory_query="$(echo "$(sysctl -n hw.pagesize) $(sysctl -n hw.usermem) $(vmstat -s | awk '/pages active$/ {print $1}')" | awk '{ print $2, $1 * $3 }')"

else
	readonly cpu='unknown'
	readonly distro="${OS}"
	readonly host='unknown'
	readonly kernel="$(uname -mr)"
	readonly memory_query='1 0'
fi

readonly disk_total="$(echo "${disk_query}" | awk '{print $1}')"
readonly disk_used="$(echo "${disk_query}" | awk '{print $2}')"
readonly disk_percent_used="$(echo "${disk_query}" | awk '{print $3}')"
readonly memory_percent_used=$(echo "${memory_query}" | awk '{print $2/$1*100}' | awk -F'.' '{print $1}')
readonly memory_total=$(echo "${memory_query}" | awk '{print $1/1024^2}' | awk -F'.' '{print $1}')
readonly memory_used=$(echo "${memory_query}" | awk '{print $2/1024^2}' | awk -F'.' '{print $1}')

case "${SHELL##*/}" in
        bash) readonly shell_version="$(${SHELL} -c 'printf %s ${BASH_VERSION}')" ;;
        zsh) readonly shell_version="$(${SHELL} -c 'printf %s ${ZSH_VERSION}')" ;;
	*) readonly shell_version='' ;;
esac

readonly uptime="$(uptime | awk '{print $3, $4}' | sed 's/\,//g')"
if [[ "$(echo "${uptime}" | awk -F':' '{print $1}')" != "${uptime}" ]]; then
	readonly uptime="$(echo "${uptime}" | awk -F':' '{print $1}') hour(s)"
fi

printf "\n\t%s@%s\n\n" "${LOGNAME}" "${HOSTNAME}"
printf "OS:\t\t%s\n" "${distro}"
printf "Kernel:\t\t%s\n" "${kernel}"
printf "Uptime:\t\t%s\n" "${uptime}"
if [[ -z "${shell_version}" ]]; then
	printf "Shell:\t\t%s\n" "${SHELL}"
else
	printf "Shell:\t\t%s (%s)\n" "${SHELL}" "${shell_version}"
fi
printf "Host:\t\t%s\n" "${host}"
printf "CPU:\t\t%s\n" "${cpu}"
if [[ -n "${gpu}" ]]; then
	printf "GPU:\t\t%s\n" "${gpu}"
fi
if [[ -n "${disk_used}" ]]; then
	printf "Disk:\t\t%s / %s (%s)\n" "${disk_used}" "${disk_total}" "${disk_percent_used}"
fi
printf "RAM:\t\t%sM / %sM (%s%%)\n" "${memory_used}" "${memory_total}" "${memory_percent_used}"
