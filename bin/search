#!/bin/ksh

set -euo pipefail

usage() {
	printf "usage:\n\tsearch [KEYWORD] [QUERY]\n\nSupported KEYWORDs:\n"
	printf "\t* alpine     - search the package repositories for Alpine Linux\n"
	printf "\t* arxiv      - search the arXiv preprint server\n"
	printf "\t* cve        - retrieve info about a published CVE\n"
	printf "\t* debian     - search the package repositories for Debian Linux\n"
	printf "\t* fedora     - search the package repositories for Fedora Linux\n"
	printf "\t* freebsd    - search the package repositories for FreeBSD\n"
	printf "\t* gutenberg  - search the Project Gutenberg archives\n"
	printf "\t* man*       - retrieve manpages for debian, dragonflybsd, freebsd, illumos, netbsd, or openbsd\n"
	printf "\t* mbug       - search the Mozilla Bugzilla\n"
	printf "\t* nws        - retrieve a forecast from the US National Weather Service\n"
	printf "\t* openbsd    - search the package repositories for OpenBSD\n"
	printf "\t* rfc        - retrieve the text of a published IETF RFC\n"
	printf "\t* rhbz       - search the Red Hat Bugzilla\n"
	printf "\t* thesaurus  - search the Oxford Dictionary thesaurus\n"
	printf "\t* wikipedia  - search Wikipedia, the free encyclopedia\n"
	printf "\t* wiktionary - search Wiktionary, the free dictionary\n"
}

if [[ "$(tput cols)" -gt 80 ]]; then
        export COLUMNS=80
fi

# try to guess preferred language from $LANG
if [[ -n "${LANG}" ]]; then
	readonly lang="$(echo "${LANG}" | cut -c1-2)"
else
	readonly lang='en'
fi

# escape characters for URL-encoding
escape_html() {
	echo "$@" | sed 's/%/%25/g;
		s/+/%2B/g;
		s/ /%20/g;
		s/(/%28/g;
		s/)/%29/g;
		s/"/%22/g;
		s/#/%23/g;
		s/\$/%24/g;
		s/&/%26/g;
		s/,/%2C/g;
		sx/x%2Fxg;
		s/:/%3A/g;
		s/;/%3B/g;
		s/</%3C/g;
		s/=/%3D/g;
		s/>/%3E/g;
		s/?/%3F/g;
		s/@/%40/g;
		s/\[/%5B/g;
		s/\\/%5C/g;
		s/\]/%5D/g;
		s/\^/%5E/g;
		s/{/%7B/g;
		s/|/%7C/g;
		s/}/%7D/g;
		s/~/%7E/g;
		s/`/%60/g;
	'"s/'/%27/g"
}

# surf the netz raw
if [[ "${#}" == '0' ]] || [[ "${1}" == '-h' ]] || [[ "${1}" == '--help' ]]; then
	usage
	exit 0

elif [[ "${1}" == 'alpine' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://pkgs.alpinelinux.org/packages"
	else
		lynx "https://pkgs.alpinelinux.org/packages?name=${query}&branch=edge"
	fi

elif [[ "${1}" == 'arxiv' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://arxiv.org/"
	else
		lynx "https://arxiv.org/search/?query=${query}&searchtype=all&source=header"
	fi

elif [[ "${1}" == 'cve' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://cve.mitre.org"
	else
		lynx "https://cve.mitre.org/cgi-bin/cvename.cgi?name=${query}"
	fi

elif [[ "${1}" == 'debian' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://tracker.debian.org/"
	else
		lynx "https://tracker.debian.org/search?package_name=${query}"
	fi

elif [[ "${1}" == 'fedora' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://koji.fedoraproject.org/koji"
	else
		lynx "https://koji.fedoraproject.org/koji/search?match=glob&type=package&terms=${query}"
	fi

elif [[ "${1}" == 'freebsd' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://www.freebsd.org/ports/"
	else
		lynx "https://www.freebsd.org/cgi/ports.cgi?query=${query}&stype=name&sektion=all"
	fi

elif [[ "${1}" == 'gutenberg' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://www.gutenberg.org/"
	else
		lynx "https://www.gutenberg.org/ebooks/search/?query=${query}&submit_search=Go%21"
	fi

elif [[ "${1}" == 'mandebian' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://manpages.debian.org/"
	else
		lynx "https://manpages.debian.org/jump?q=${query}"
	fi

elif [[ "${1}" == 'mandragonflybsd' ]] || [[ "${1}" == 'mandflybsd' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://man.dragonflybsd.org/"
	else
		lynx "https://man.dragonflybsd.org/?section=ANY&command=${query}"
	fi

elif [[ "${1}" == 'manfreebsd' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://www.freebsd.org/cgi/man.cgi"
	else
		lynx "https://www.freebsd.org/cgi/man.cgi?sektion=0&manpath=FreeBSD%2012.2-RELEASE&arch=default&format=ascii&query=${query}"
	fi

elif [[ "${1}" == 'manillumos' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://illumos.org/man"
	else
		lynx "https://illumos.org/man/${query}"
	fi

elif [[ "${1}" == 'mannetbsd' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://man.netbsd.org/"
	else
		lynx "https://man.netbsd.org/NetBSD-current/${query}"
	fi

elif [[ "${1}" == 'manopenbsd' ]] || [[ "${1}" == 'man' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://man.openbsd.org/"
	else
		lynx "https://man.openbsd.org/?sec=0&arch=default&manpath=OpenBSD-current&query=${query}"
	fi

elif [[ "${1}" == 'mbug' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://bugzilla.mozilla.org/"
	else
		lynx "https://bugzilla.mozilla.org/buglist.cgi?quicksearch=${query}"
	fi

elif [[ "${1}" == 'nws' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://www.weather.gov/"
	else
		lynx "https://forecast.weather.gov/zipcity.php?inputstring=${query}&btnSearch=Go&unit=1"
	fi

elif [[ "${1}" == 'openbsd' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://cvsweb.openbsd.org/ports/"
	else
		lynx "https://openports.se/search.php?so=${query}"
	fi

elif [[ "${1}" == 'rfc' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://www.ietf.org/standards/rfcs/"
	else
		lynx "https://tools.ietf.org/rfc/rfc${query}.txt"
	fi

elif [[ "${1}" == 'rhbz' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://bugzilla.redhat.com/"
	else
		lynx "https://bugzilla.redhat.com/buglist.cgi?quicksearch=${query}"
	fi

elif [[ "${1}" == 'thesaurus' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://en.oxforddictionaries.com/english-thesaurus"
	else
		lynx "https://en.oxforddictionaries.com/thesaurus/${query}"
	fi

elif [[ "${1}" == 'wikipedia' ]] || [[ "${1}" == 'w' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://${lang}.wikipedia.org/wiki/"
	else
		lynx "https://${lang}.wikipedia.org/wiki/Special:Search?search=${query}&go=Go&ns0=1"
	fi

elif [[ "${1}" == 'wiktionary' ]] || [[ "${1}" == 'wikt' ]]; then
	shift
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://${lang}.wiktionary.org/wiki/"
	else
		lynx "https://${lang}.wiktionary.org/wiki/Special:Search?search=${query}&go=Go&ns0=1"
	fi

else
	readonly query="$(escape_html "$@")"
	if [[ -z "${query}" ]]; then
		lynx "https://www.duckduckgo.com/lite/"
	else
		lynx "https://www.duckduckgo.com/lite/?q=${query}&?kae=t&kac=-1&kaj=m&kam=osm&kak=-1&kax=-1&kv=-1&kaq=-1&kap=-1&kg=g"
	fi
fi
