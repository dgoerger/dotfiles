""" file encodings are important, take care of this first
if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
  set fileencodings=ucs-bom,utf-8,latin1
endif

""" import vim defaults
if filereadable(expand('$VIMRUNTIME/defaults.vim'))
  source $VIMRUNTIME/defaults.vim
  let skip_defaults_vim=1   " don't source again in absence of ~/.vimrc
else                        " if no vim default profile, set here
  set nocompatible          " use Vim defaults instead of legacy Vi
  set bs=indent,eol,start   " allow backspacing over everything in insert mode
  set history=50            " keep 50 lines of command line history
  set ruler                 " show the cursor position all the time
  set wildmenu              " tab-completion
  if has('reltime')         " when it's possible to time out
    set incsearch           " search/highlight while typing
  endif
  if has('autocmd')         " only when compiled with support for autocommands
    filetype plugin on      " import filetype settings (e.g. tw=72 for mail)
    autocmd BufReadPost *   " when editing, jump to the last cursor position
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal! g'\"" |
    \ endif
  endif
endif

""" begin Fedora-specific config
if &term=="xterm"
  set t_Co=8                " set terminal colors when TERM=xterm
  set t_Sb=[4%dm
  set t_Sf=[3%dm
endif
if has('autocmd')
  augroup fedora
  autocmd!
  " don't write swapfile in directories commonly used for NFS and USB mounts
  autocmd BufNewFile,BufReadPre /media/*,/run/media/*,/mnt/* |
  \ set directory=~/tmp,/var/tmp,/tmp
  " start with spec file template
  autocmd BufNewFile *.spec 0r /usr/share/vim/vimfiles/template.spec
  augroup END
endif
" cscope
if has('cscope') && filereadable('/usr/bin/cscope')
  set csprg=/usr/bin/cscope
  set csto=0
  set cst
  set nocsverb
  " add any database in current directory
  if filereadable("cscope.out")
    cs add $PWD/cscope.out
  " else add database pointed to by environment
  elseif $CSCOPE_DB != ""
    cs add $CSCOPE_DB
  endif
  set csverb
endif
if &t_Co > 2 || has("gui_running")
  syntax on                 " enable syntax highlighting
  set hlsearch              " highlight search pattern
endif
" don't wake up system with blinking cursor
let &guicursor = &guicursor . ",a:blinkon0"


""" source site-specific config
if filereadable('/etc/vimrc.local')
  source /etc/vimrc.local
endif
